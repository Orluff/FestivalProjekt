@page "/createshift"
@page "/createshift/{shiftid}"
@using Client.Services;
@using System;
@using Microsoft.AspNetCore.Components.Forms;
@using Syncfusion.Blazor.Calendars

<h1 class="mb-3 mt-3">Opret vagter:</h1>
<EditForm EditContext="@aEditContext" class="row p-3" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="col-md-12 mb-3">
        <label for="startDateTime">Start Tidspunkt:</label>
        <SfDateTimePicker id="startDateTime" @bind-Value="shiftItem.startDateTime" class="form-control" />
    </div>
    <div class="col-md-12 mb-3">
        <label for="endDateTime">Slut Tidspunkt:</label>
        <SfDateTimePicker id="endDateTime" @bind-Value="shiftItem.endDateTime" class="form-control" />
    </div>
    <div class="col-md-6 mb-3">
        <label for="duration">Længde:</label>
        <InputNumber id="duration" @bind-Value="shiftItem.duration" class="form-control" />
    </div>
    <div class="col-md-6 mb-3">
        <label for="category_id">Kategori:</label>
        <InputSelect id="category_id" @bind-Value="@catItem.category_id">
            @foreach (var cat in catList)
            {
                <option value="@cat.category_id">@cat.categoryName</option>
            }
        </InputSelect>
    </div>
    <div class="col-md-12 mb-3">
        <label for="priority">Prioritet:</label>
        <InputCheckbox id="priority" @bind-Value="shiftItem.priority" class="checkbox" style="width: 20px; height: 20px;" />
    </div>
    <div class="col-md-12 mb-3">
        <label for="spots">Pladser:</label>
        <InputNumber id="spots" @bind-Value="shiftItem.spots" class="form-control" />
    </div>
    <div class="col-12 mb-3">
        <button type="submit" class="btn btn-primary">Lav vagt</button>
    </div>
</EditForm>


@code {

    ShiftDTO shift = new();

    ShiftCategoryDTO category = new();

    private ShiftCategoryDTO catItem = new ShiftCategoryDTO();

    private ShiftCategoryDTO[]? catList = new ShiftCategoryDTO[0];

    [Parameter]
    public int shiftid { get; set; }

    [Inject]
    private IShiftService mService { get; set; }

    [Inject]
    private ICategoryService cService { get; set; }

    private ShiftDTO shiftItem = new ShiftDTO();

    private EditContext aEditContext;

    protected override async Task OnInitializedAsync()
    {
        catList = (await cService.getCategories()).ToArray();
    }

    protected override void OnInitialized()
    {
        aEditContext = new EditContext(shiftItem);
        aEditContext = new EditContext(catItem);
    }

    public async Task HandleValidSubmit()
    {
        await AddShift(); // clear fields in form
    }

    private async Task AddShift()
    {
        shiftItem.category = catList.FirstOrDefault(c => c.category_id == catItem.category_id);
        //tidligere instans objektid fra shift siden
        shiftItem.shift_id = shiftid;
        //catItem.category_id = categoryid;
        //shiftItem.category = new ShiftCategoryDTO { category_id = shiftItem.category_id };
        await mService.AddShift(shiftItem);
        await cService.AddCategory(catItem);
        catItem = new();
        shiftItem = new(); // clear fields in form
    }
}