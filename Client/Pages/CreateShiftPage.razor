@page "/createshift"
@using Client.Services;
@using System;
@using Microsoft.AspNetCore.Components.Forms;
@using Syncfusion.Blazor.Calendars;
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage;


<!-- form til at oprette vagter -->
<div class="normal-container">
    <div class="normal-title">Opret vagter</div>
    <div class="content">
        <EditForm EditContext="@aEditContext" class="row p-3" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="shift-details">

                <div class="input-box">
                    <label for="startDateTime">Start Tidspunkt:</label>
                    <!-- SfDateTimePicker er en komponent af Syncfusion.Blazor.Calenders så både dato og tid fremvises-->
                    <SfDateTimePicker id="startDateTime" @bind-Value="shiftItem.startDateTime" />
                </div>

                <div class="input-box">
                    <label for="endDateTime">Slut Tidspunkt:</label>
                    <SfDateTimePicker id="endDateTime" @bind-Value="shiftItem.endDateTime" />
                </div>

                <div class="input-box">
                    <label for="duration">Længde:</label>
                    <InputNumber id="duration" @bind-Value="shiftItem.duration" class="form-input" />
                </div>

                <div class="input-box">
                    <label for="spots">Pladser:</label>
                    <InputNumber id="spots" @bind-Value="shiftItem.spots" />
                </div>

                <div class="input-box">
                    <label for="category_id">Kategori:</label>
                    <InputSelect id="category_id" @bind-Value="shiftItem.category_id" class="form-control">

                        <!-- Ekstra option uden værdiattribut -->
                        <option value="">Vælg en kategori</option>

                        <!-- Itererer gennem catList for at generere option-elementer -->
                        @foreach (var cat in catList)
                        {
                            <!-- Hver kategori repræsenteres som en option med værdien af category_id -->
                            <option value="@cat.category_id">@cat.categoryName</option>
                        }
                    </InputSelect>
                </div>

                <div class="input-box">
                    <label for="priority">Prioritet:</label>
                    <InputCheckbox id="priority" @bind-Value="shiftItem.priority" class="checkbox" style="width: 20px; height: 20px;" />
                </div>

            </div>
            <button type="submit">Opret vagt</button>
        </EditForm> 
    </div>
</div>

@code {

    //Variable til at holde brugerens ID
    public int userId { get; set; }

    // Nye instanser af ShiftDTO og ShiftCategoryDTO
    private ShiftDTO shiftItem = new ShiftDTO();
    private ShiftCategoryDTO catItem = new ShiftCategoryDTO();

    //Array af ShiftCategoryDTO-objekter, der kan være null
    private ShiftCategoryDTO[]? catList = new ShiftCategoryDTO[0];

    //Tjenester til vores services
    [Inject]
    private IShiftService mService { get; set; }
    [Inject]
    private ICategoryService cService { get; set; }


    protected override async Task OnInitializedAsync()
    {
        //Henter brugerens id fra sessionStorage
        userId = await sessionStorage.GetItemAsync<int>("userId");
        if (userId == 0)
        {
            // Hvis userId er 0, omdirigeres brugeren til login siden
            NavigationManager.NavigateTo($"/");
        }

        // Henter kategorier og konverterer dem til et array
        catList = (await cService.getCategories()).ToArray();
    }

    // EditContext-objekt til validering af formularfelter
    private EditContext aEditContext;

    protected override void OnInitialized()
    {
        aEditContext = new EditContext(shiftItem);
        aEditContext = new EditContext(catItem);
    }

    private async Task AddShift()
    {
        try
        {
            await mService.AddShift(shiftItem);

            // Tømmer felter i formularen
            shiftItem = new();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }

    public async Task HandleValidSubmit()
    {
        await AddShift();
    }
}