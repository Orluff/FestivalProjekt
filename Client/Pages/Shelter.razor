@*@page "/Shelter"
@inject NavigationManager NavigationManager
@inject HttpClient Http

<PageTitle>Shelter</PageTitle>

<h1>Shelters</h1>

@if (shelter == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <tbody>
            @foreach (var item in shelterList)
            {
                <tr class="Shelter">
                    <td>
                        @if (item.navn != null)
                        {
                            <h2>@item.navn</h2>
                        }
                        else {
                                <h2>@item.beskrivels</h2>
                            }
                        <p>Kommune: @item.cvr_navn </p>

                        @if (item.objekt_id == "70e29b6c-a819-11eb-96fa-06d09fa510f4")
                        {
                            <img src="Images/MollerupShelter.png" alt="Shelter Image" style="width: 280px; height: 186px;" />
                        }

                        @if (item.objekt_id == "73768d11-06d4-4a30-aead-49f7c113ffce")
                        {
                            <img src="Images/NorsmindeShelter.png" alt="Shelter Image" style="width: 280px; height: 186px;" />
                        }

                        <p>Beskrivelse: @item.beskrivels </p>
                        <p>Antal pladser: @item.antal_pl</p>
                        <p>Koordinater: @item.breddegrad, @item.længdegrad</p>
                        <p>Oprettet: @item.oprettet</p>
                    </td>
                    <div class="col-12 mb-3">
                        <button type="button" class="btn btn-primary" @onclick="() => HandleBooking(item.objekt_id)">Book</button>

                    </div>
                </tr>
            }
        </tbody>
    </table>
}


@code {


    private ShelterItems shelter = new ShelterItems();

    private ShelterItems[]? shelterList = new ShelterItems[0];

    private EditContext aEditContext;

    protected override void OnInitialized()
    {
        aEditContext = new EditContext(shelter);

    }

    public async Task HandleValidSubmit()
    {
        await AddShelterItem();
    }

    private async Task AddShelterItem()
    {
        await Http.PostAsJsonAsync<ShelterItems>("https://localhost:7201/api/shelter", shelter);
        OnInitializedAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        shelterList = await Http.GetFromJsonAsync<ShelterItems[]>("https://localhost:7201/api/shelter");
    }

    private void HandleBooking(Object shelterId)
    {
        //konverter object til string
        string bookedSheltersString = string.Join("", shelterId);
        shelter.objekt_id = bookedSheltersString;
        //Gå ind på instans af shelter.objekt_id
        NavigationManager.NavigateTo($"https://localhost:7299/booking/{shelter.objekt_id}");
    }
}*@