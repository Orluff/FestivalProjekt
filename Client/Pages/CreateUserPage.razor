@page "/createuser"
@using Client.Services;
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage;

<h1 class="mb-3 mt-3">Opret bruger:</h1>
<EditForm EditContext="@aEditContext" class="row p-3" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="col-md-12 mb-3">
        <label for="name">Fornavn:</label>
        <InputText id="name" @bind-Value="userItem.name" class="form-control" />
    </div>
    <div class="col-md-12 mb-3">
        <label for="lastName">Efternavn:</label>
        <InputText id="lastName" @bind-Value="userItem.lastName" class="form-control" />
    </div>
    <div class="col-md-6 mb-3">
        <label for="address">Adresse:</label>
        <InputText id="address" @bind-Value="userItem.address" class="form-control" />
    </div>
    <div class="col-md-6 mb-3">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="userItem.email" class="form-control" />
    </div>
    <div class="col-md-6 mb-3">
        <label for="telephone">Telefonnummer:</label>
        <InputText id="telephone" @bind-Value="userItem.telephone" class="form-control" />
    </div>
    <div class="col-md-6 mb-3">
        <label for="birthDate">Fødselsdato:</label>
        <InputDate id="birthDate" @bind-Value="userItem.birthDate" class="form-control" />
    </div>

    <div class="col-md-3 mb-3">
        <label for="role_id">Rolle:</label>
        <div class="input-group">
            <InputSelect id="role_id" @bind-Value="userItem.role_id" class="form-control">
                @foreach (var role in roleList)
                {
                    <option value="@role.role_id">@role.roleName</option>
                }
            </InputSelect>
        </div>
    </div>
        <div class="col-md-6 mb-3">
            <label for="password">Password:</label>
            <InputText id="password" @bind-Value="userItem.password" class="form-control" />
        </div>

        <div class="col-12 mb-3">
            <button type="submit" class="btn btn-primary">Opret bruger</button>
        </div>
</EditForm>


@code {

    //Gemmer brugerens id
    public int userId { get; set; }

    //Egenskaber
    private UserDTO userItem = new UserDTO();
    private ShiftCategoryDTO roleItem = new ShiftCategoryDTO();
    private RoleDTO[]? roleList = new RoleDTO[0];
    private RoleDTO rol = new();


    //Tjeneste til vores service
    [Inject]
    private IUserService mService { get; set; }
    [Inject]
    private IRoleService rService { get; set; }
    [Inject]
    private IUserService uService { get; set; }

    [Parameter]
    public int userid { get; set; }

    // EditContext-objekt til validering af formularfelter
    private EditContext aEditContext;


    protected override async Task OnInitializedAsync()
    {
        // Henter userId fra sessionStorage
        userId = await sessionStorage.GetItemAsync<int>("userId");
        if (userId == 0)
        {
            // Hvis userId er 0, omdirigeres brugeren til start siden
            NavigationManager.NavigateTo($"/");
        }
        roleList = (await rService.getRole()).ToArray();
    }

    protected override void OnInitialized()
    {
        aEditContext = new EditContext(userItem);
        aEditContext = new EditContext(roleItem);
    }

    public async Task HandleValidSubmit()
    {
        await AddUser();
    }

    private async Task AddUser()
    {
        //Sætter userItem's user_id til userId
        userItem.user_id = userId;

        await mService.AddUser(userItem);

        // Tømmer felter i formularen
        userItem = new();
    }
}