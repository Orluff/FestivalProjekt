@page "/createuser"
@using Client.Services;
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage;


<!-- form til at oprette bruger -->
<div class="normal-container">
    <div class="normal-title">Opret bruger</div>
    <div class="content">
        <EditForm EditContext="@aEditContext" class="row p-3" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="user-details">

                <div class="input-box">
                    <label for="name">Fornavn:</label>
                    <InputText id="name" placeholder="Lars" @bind-Value="userItem.name" class="form-control" />
                </div>

                <div class="input-box">
                    <label for="lastName">Efternavn:</label>
                    <InputText id="lastName" placeholder="Larsen" @bind-Value="userItem.lastName" class="form-control" />
                </div>

                <div class="input-box">
                    <label for="address">Adresse:</label>
                    <InputText id="address" placeholder="Lykkevej 7, 8000 Aarhus C" @bind-Value="userItem.address" class="form-control" />
                </div>

                <div class="input-box">
                    <label for="email">Email:</label>
                    <InputText id="email" placeholder="lars@mail.com" @bind-Value="userItem.email" class="form-control" />
                </div>

                <div class="input-box">
                    <label for="telephone">Telefonnummer:</label>
                    <InputText id="telephone" placeholder="27282930" @bind-Value="userItem.telephone" class="form-control" />
                </div>

                <div class="input-box">
                    <label for="birthDate">Fødselsdato:</label>
                    <InputDate id="birthDate" @bind-Value="userItem.birthDate" class="form-control" />
                </div>

                <div class="input-box">
                    <label for="role_id">Rolle:</label>
                    <InputSelect id="role_id" placeholder="Rolle" @bind-Value="userItem.role_id" class="form-control">

                        <!-- Ekstra option uden værdiattribut -->
                        <option value="">Vælg en rolle</option>

                        <!-- Itererer gennem roleList for at generere option-elementer -->
                        @foreach (var role in roleList)
                        {
                            <!-- Hver rolle repræsenteres som en option med værdien af role_id -->
                            <option value="@role.role_id">@role.roleName</option>
                        }
                    </InputSelect>
                </div>

                <div class="input-box">
                    <label for="password">Password:</label>
                    <InputText id="password" placeholder="Min. 5 tegn" @bind-Value="userItem.password" class="form-control" />
                </div>
            </div>
            <button type="submit">Opret bruger</button>
        </EditForm>
    </div>
</div>


@code {

    //Variable til at holde brugerens ID
    public int userId { get; set; }

    //Egenskaber
    private UserDTO userItem = new UserDTO();
    private ShiftCategoryDTO roleItem = new ShiftCategoryDTO();
    private RoleDTO[]? roleList = new RoleDTO[0];


    //Tjeneste til vores service
    [Inject]
    private IUserService mService { get; set; }
    [Inject]
    private IRoleService rService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Hent userId fra sessionStorage
        userId = await sessionStorage.GetItemAsync<int>("userId");
        if (userId == 0)
        {
            // Hvis userId er 0, omdirigeres brugeren til start siden
            NavigationManager.NavigateTo($"/");
        }

        // Hent roller og konverter dem til et array
        roleList = (await rService.getRole()).ToArray();
    }

    // EditContext-objekt til validering af formularfelter
    private EditContext aEditContext;

    protected override void OnInitialized()
    {
        aEditContext = new EditContext(userItem);
        aEditContext = new EditContext(roleItem);
    }

    private async Task AddUser()
    {
        try
        {
            //Sæt userItem's user_id til userId
            userItem.user_id = userId;

            //Tilføj bruger
            await mService.AddUser(userItem);

            //Tøm felter i formularen
            userItem = new();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }

    }

    public async Task HandleValidSubmit()
    {
        await AddUser();
    }
}